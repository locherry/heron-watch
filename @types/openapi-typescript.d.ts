declare module 'openapi-typescript' {
	/**
	 * Not in scope at this time, but could be included with more specificity for OAuth support.
	 * https://swagger.io/specification/#oauth-flows-object
	 */
	export type OAuthFlowsObject = any;

	/**
	 * https://swagger.io/specification/#security-requirement-object
	 */
	export interface SecurityRequirementObject {
		/**
		 * Each name MUST correspond to a security scheme which is declared in the Security Schemes under the Components Object. If the security scheme is of type "oauth2" or "openIdConnect", then the value is a list of scope names required for the execution, and the list MAY be empty if authorization does not require a specified scope. For other security scheme types, the array MUST be empty.
		 */
		[name: string]: string[];
	}

	/**
	 * https://swagger.io/specification/#security-scheme-object
	 */
	export interface SecuritySchemesObject {
		[securityScheme: string]: {
			/**
			 * REQUIRED.
			 * Applies To: ANY.
			 * The type of the security scheme. Valid values are "apiKey", "http", "oauth2", "openIdConnect".
			 */
			type: 'apiKey' | 'http' | 'oauth2' | 'openIdConnect' | "bearerAuth";
			/**
			 * Applies To: ANY.
			 * A short description for security scheme. CommonMark syntax MAY be used for rich text representation.
			 */
			description?: string;
			/**
			 * REQUIRED.
			 * Applies To: apiKey.
			 * The name of the header, query or cookie parameter to be used.
			 */
			name?: string;
			/**
			 * REQUIRED.
			 * Applies To: apiKey.
			 * The location of the API key. Valid values are "query", "header" or "cookie".
			 */
			in?: 'query' | 'header' | 'cookie';
			/**
			 * REQUIRED.
			 * Applies To: http.
			 * The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235. The values used SHOULD be registered in the IANA Authentication Scheme registry.
			 */
			scheme?: string;
			/**
			 * Applies To: http("bearer")
			 * A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.
			 */
			bearerFormat?: string;
			/**
			 * REQUIRED.
			 * Applies To: oauth2.
			 * An object containing configuration information for the flow types supported.
			 */
			flows?: OAuthFlowsObject;
			/**
			 * REQUIRED.
			 * Applies To: openIdConnect.
			 * OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.
			 */
			openIdConnectUrl?: string;
		};
	}

	export interface OperationObject {
		security?: SecurityRequirementObject[];
	}

	export interface OpenAPI3 {
		security?: SecurityRequirementObject[];
		securitySchemes?: SecuritySchemesObject;
	}
}
