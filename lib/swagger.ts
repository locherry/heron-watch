/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/actions/{stock_category}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all actions, specific to a stock category */
        get: operations["331b62c6cfe39ae53eb55c4b5f423c9c"];
        put?: never;
        /** Insert new actions in the specified stock category */
        post: operations["460f76563da78d49cac27d90f6280ff4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actions/{stock_category}/{action_ID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an action by id in the specified stock category */
        get: operations["0860d0739a5643134ee5b943ccf40bd3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Authenticate user and return JWT */
        post: operations["fe6544959270bd59edaecbc87ce09a4c"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/errors/{stock_category}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Correct errors in actions, so in stocks too */
        patch: operations["ad26345d7319f72aa2ba8872e27fc3c7"];
        trace?: never;
    };
    "/errors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add corrupted data to known_errors table */
        post: operations["67cf18badd8d1e56bcc93ea516184d4f"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/errors/{stock_category}/correctExpDate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Correct wrong expiration_date */
        patch: operations["f3767d2b95e3d9782fd7d64dae6a3cb7"];
        trace?: never;
    };
    "/stocks/{stock_category}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get actual stock data */
        get: operations["3affd2f60f651f8329274f7b8d06c203"];
        put?: never;
        /** Save a stock in database, which is the stock at a precize date. */
        post: operations["1988dd14be8f06b9096f02e3b5ad82a6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all users */
        get: operations["21374aa54f8c94a3dfd9abf9efe9ac86"];
        put?: never;
        /** Create a new user */
        post: operations["c23061913c7f3c33a5e8f57461149771"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user_ID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an user by ID */
        get: operations["cd7cf90bd70793032e47d1fee7bc665a"];
        put?: never;
        post?: never;
        /** Delete a user */
        delete: operations["97fd6c75f1cdb47d086d2fa8a7063640"];
        options?: never;
        head?: never;
        /** Modify a user */
        patch: operations["d34c02a1e3276e417eb75f2b6e91cf26"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        User: {
            /** @example 1 */
            id: number;
            /** @example John */
            first_name: string;
            /** @example Doe */
            last_name: string;
            /** @example johndoe */
            username: string;
            /**
             * Format: email
             * @example john@example.com
             */
            email: string;
            /** @example user */
            role: string;
            user_preferences?: {
                /** @example dark */
                theme?: string | null;
                /** @example #ff0000 */
                tint_color?: string | null;
                /** @example en */
                language?: string | null;
            };
        };
        Action: {
            id: number;
            quantity: number;
            comment: string;
            product_code: number;
            lot_number: string;
            created_by_id: number;
            /** Format: date-time */
            created_at: string;
            action_id: number;
            transaction: string;
        };
        Stock: {
            /** @example 144 */
            product_code: number;
            /** @example DSC050525 */
            lot_number: string;
            /** @example 100 */
            quantity: number;
            /**
             * Format: date
             * @example 2025-05-05
             */
            expiration_date: string;
        };
        newActions: (components["schemas"]["Action"] | components["schemas"]["Action"] | components["schemas"]["Action"])[];
        Wrong_actions: {
            error_in_stock: components["schemas"]["Action"][];
            error_in_insert: components["schemas"]["Action"][];
        };
        AimDate: {
            /**
             * Format: date-time
             * @example 2025-04-04 14:54:12
             */
            aimdate: string;
        };
        Stock_content: (components["schemas"]["Stock"] | components["schemas"]["Stock"])[];
        Error_manager_informations_to_modify_array: {
            /** @example 309 */
            product_code?: string;
            /** @example GDE050528 */
            lot_number?: string;
            /** @example 45 */
            quantity?: number;
            /** @example 2 */
            action_id?: number;
            /** @example 34009 */
            transaction?: string;
        };
        Error_manager_corrupted_data: {
            /** @example 309 */
            product_code?: string;
            /** @example GDE050528 */
            lot_number?: string;
        };
        Error_manager_add_corrupted_data: (components["schemas"]["Error_manager_corrupted_data"] | components["schemas"]["Error_manager_corrupted_data"])[];
        Error_manager_expiration_date: {
            /** @example 309 */
            product_code?: string;
            /** @example GDE050528 */
            lot_number?: string;
            /**
             * Format: date
             * @example 2028-05-05
             */
            expiration_date?: string;
        };
        Error_manager_correct_expiration_date: (components["schemas"]["Error_manager_expiration_date"] | components["schemas"]["Error_manager_expiration_date"])[];
        /**
         * @description Objet associatif dont les clés sont des identifiants uniques de lignes SQL (ex : 3, 6, 42). Les valeurs respectent le schéma Error_manager_informations_to_modify_array.
         * @example {
         *       "4": {
         *         "product_code": "207IGP",
         *         "lot_number": "CC130529",
         *         "quantity": 39,
         *         "action_id": 1,
         *         "transaction": "25009"
         *       },
         *       "9": {
         *         "product_code": "309",
         *         "lot_number": "GDE130529",
         *         "quantity": 43,
         *         "action_id": 2,
         *         "transaction": "43898"
         *       }
         *     }
         */
        Error_manager_informations_to_modify: {
            [key: string]: components["schemas"]["Error_manager_informations_to_modify_array"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "331b62c6cfe39ae53eb55c4b5f423c9c": {
        parameters: {
            query?: {
                /** @description Maximum number of results to return */
                limit?: number;
                /** @description Number of items to skip (for pagination) */
                offset?: number;
                /** @description Sort order: asc or desc */
                sort?: "asc" | "desc";
            };
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Actions fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Actions fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"][];
                    };
                    "application/xml": {
                        /** @example Actions fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "460f76563da78d49cac27d90f6280ff4": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @example PF_G */
                    category_identifier: string;
                    informations_to_insert: components["schemas"]["newActions"];
                };
            };
        };
        responses: {
            /** @description New actions have been inserted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example New actions have been inserted successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example New actions have been inserted successfully */
                        message?: string;
                    };
                };
            };
            /** @description Some actions have led to errors in stocks */
            207: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Wrong_actions"][];
                    "application/xml": components["schemas"]["Wrong_actions"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "0860d0739a5643134ee5b943ccf40bd3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
                actionID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Action fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Action fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"];
                    };
                    "application/xml": {
                        /** @example Action fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    fe6544959270bd59edaecbc87ce09a4c: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: email
                     * @example user@example.com
                     */
                    email: string;
                    /**
                     * Format: password
                     * @example yourPassword
                     */
                    password: string;
                };
            };
        };
        responses: {
            /** @description Successful login */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Successful login */
                        message?: string;
                        data?: {
                            jwt?: string;
                            expireAt?: number;
                            user_info?: {
                                id?: number;
                                email?: string;
                                role?: string;
                                username?: string;
                                first_name?: string;
                                last_name?: string;
                            };
                            user_preferences?: {
                                theme?: string | null;
                                tint_color?: string | null;
                                language?: string | null;
                            };
                        };
                    };
                    "application/xml": {
                        /** @example Successful login */
                        message?: string;
                        data?: {
                            jwt?: string;
                            expireAt?: number;
                            user_info?: {
                                id?: number;
                                email?: string;
                                role?: string;
                                username?: string;
                                first_name?: string;
                                last_name?: string;
                            };
                            user_preferences?: {
                                theme?: string | null;
                                tint_color?: string | null;
                                language?: string | null;
                            };
                        };
                    };
                };
            };
            /** @description Missing email or password */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Login failed. Incorrect password or user not registered. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ad26345d7319f72aa2ba8872e27fc3c7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Error_manager_informations_to_modify"];
            };
        };
        responses: {
            /** @description Stocks updated without detected new errors */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Stocks updated without detected new errors */
                        message?: string;
                    };
                };
            };
            /** @description Stocks updated with potential new errors */
            207: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Wrong_actions"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "67cf18badd8d1e56bcc93ea516184d4f": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Error_manager_add_corrupted_data"];
            };
        };
        responses: {
            /** @description New corrupted products have been referenced successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example New corrupted products have been referenced successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example New corrupted products have been referenced successfully */
                        message?: string;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    f3767d2b95e3d9782fd7d64dae6a3cb7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    to_correct_products: components["schemas"]["Error_manager_correct_expiration_date"];
                };
            };
        };
        responses: {
            /** @description Expiration date updated successfuly */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Expiration date updated successfuly */
                        message?: string;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "3affd2f60f651f8329274f7b8d06c203": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Stock data retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Stock data retrieved successfully */
                        message?: string;
                        data?: components["schemas"]["Stock"][];
                    };
                    "application/xml": {
                        /** @example Stock data retrieved successfully */
                        message?: string;
                        data?: components["schemas"]["Stock"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Stock not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "1988dd14be8f06b9096f02e3b5ad82a6": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stock_category: "PF_G" | "PF_M" | "MP_F" | "MP_S" | "MP_C" | "EMB";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description New actions have been inserted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example New stock has been successfully saved in database */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example New stock has been successfully saved in database */
                        message?: string;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "21374aa54f8c94a3dfd9abf9efe9ac86": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Users fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"][];
                    };
                    "application/xml": {
                        /** @example Users fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"][];
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
        };
    };
    c23061913c7f3c33a5e8f57461149771: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    first_name?: string;
                    last_name?: string;
                    username: string;
                    email: string;
                    password: string;
                    role?: string;
                    user_preferences?: {
                        theme?: string | null;
                        tint_color?: string | null;
                        language?: string | null;
                    };
                };
            };
        };
        responses: {
            /** @description User created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User created successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User created successfully */
                        message?: string;
                    };
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description Failed to create user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    cd7cf90bd70793032e47d1fee7bc665a: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_ID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"];
                    };
                    "application/xml": {
                        /** @example User fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"];
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "97fd6c75f1cdb47d086d2fa8a7063640": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_ID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User deleted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User deleted successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User deleted successfully */
                        message?: string;
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description Unauthorized */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized: You can only delete your own profile */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized: You can only delete your own profile */
                        error?: string;
                    };
                };
            };
            /** @description Failed to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    d34c02a1e3276e417eb75f2b6e91cf26: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_ID: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    user_preferences?: {
                        theme?: string | null;
                        tint_color?: string | null;
                        language?: string | null;
                    };
                    user_info?: {
                        first_name?: string;
                        last_name?: string;
                        username?: string;
                        email?: string;
                        role?: string;
                    };
                };
            };
        };
        responses: {
            /** @description User updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User updated successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User updated successfully */
                        message?: string;
                    };
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description No sufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Failed to update user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
