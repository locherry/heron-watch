/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/actions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all actions */
        get: operations["6f82559b9776be88a74fd5f3ad8a0658"];
        put?: never;
        /** Insert new actions in database */
        post: operations["10571052c35713c859529c41cf47b0e0"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actions/{actionID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an action by id */
        get: operations["93bd0e1b484f05d6c25078a9b84d13c1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Authenticate user and return JWT */
        post: operations["fe6544959270bd59edaecbc87ce09a4c"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get stock data for a specific date */
        get: operations["681bf296e3c8a5b5ab800916afba2cc0"];
        put?: never;
        /** Save stock data for a specific date */
        post: operations["ba8c834cbe81068aa3553b10ae0adc9e"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all users */
        get: operations["21374aa54f8c94a3dfd9abf9efe9ac86"];
        put?: never;
        /** Create a new user */
        post: operations["c23061913c7f3c33a5e8f57461149771"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an user by ID */
        get: operations["f54c6efbff4bec0e08c9a4bdfbf6ec08"];
        put?: never;
        post?: never;
        /** Delete a user */
        delete: operations["56929103075f7718c31ecaf541b79b0f"];
        options?: never;
        head?: never;
        /** Modify a user */
        patch: operations["8a69c183af85db99b68b8906cefe7e91"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        User: {
            /** @example 1 */
            id: number;
            /** @example John */
            first_name: string;
            /** @example Doe */
            last_name: string;
            /** @example johndoe */
            username: string;
            /**
             * Format: email
             * @example john@example.com
             */
            email: string;
            /** @example user */
            role: string;
            user_preferences?: {
                /** @example dark */
                theme?: string | null;
                /** @example #ff0000 */
                tint_color?: string | null;
                /** @example en */
                language?: string | null;
            };
        };
        Action: {
            id: number;
            quantity: number;
            comment: string;
            product_code: number;
            lot_number: string;
            created_by_id: number;
            /** Format: date-time */
            created_at: string;
            action_id: number;
        };
        Stock: {
            /** @example 144 */
            product_code: number;
            /** @example DSC050525 */
            lot_number: string;
            /** @example 100 */
            quantity: number;
            /**
             * Format: date
             * @example 2025-05-05
             */
            DLC: string;
        };
        newActions: (components["schemas"]["Action"] | components["schemas"]["Action"] | components["schemas"]["Action"])[];
        Wrong_actions: {
            error_in_stock: components["schemas"]["Action"][];
            error_in_insert: components["schemas"]["Action"][];
        };
        AimDate: {
            /**
             * Format: date-time
             * @example 2025-04-04 14:54:12
             */
            aimdate: string;
        };
        Stock_content: (components["schemas"]["Stock"] | components["schemas"]["Stock"])[];
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "6f82559b9776be88a74fd5f3ad8a0658": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Actions fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Actions fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"][];
                    };
                    "application/xml": {
                        /** @example Actions fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "10571052c35713c859529c41cf47b0e0": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["newActions"][];
            };
        };
        responses: {
            /** @description New actions have been inserted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example New actions have been inserted successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example New actions have been inserted successfully */
                        message?: string;
                    };
                };
            };
            /** @description Some actions have led to errors in stocks */
            207: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Wrong_actions"][];
                    "application/xml": components["schemas"]["Wrong_actions"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    "93bd0e1b484f05d6c25078a9b84d13c1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                actionID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Action fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Action fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"];
                    };
                    "application/xml": {
                        /** @example Action fetched successfully */
                        message?: string;
                        data?: components["schemas"]["Action"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized */
                        error?: string;
                    };
                };
            };
        };
    };
    fe6544959270bd59edaecbc87ce09a4c: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: email
                     * @example user@example.com
                     */
                    email: string;
                    /**
                     * Format: password
                     * @example yourPassword
                     */
                    password: string;
                };
            };
        };
        responses: {
            /** @description Successful login */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Successful login */
                        message?: string;
                        data?: {
                            jwt?: string;
                            expireAt?: number;
                            user_info?: {
                                id?: number;
                                email?: string;
                                role?: string;
                                username?: string;
                                first_name?: string;
                                last_name?: string;
                            };
                            user_preferences?: {
                                theme?: string | null;
                                tint_color?: string | null;
                                language?: string | null;
                            };
                        };
                    };
                    "application/xml": {
                        /** @example Successful login */
                        message?: string;
                        data?: {
                            jwt?: string;
                            expireAt?: number;
                            user_info?: {
                                id?: number;
                                email?: string;
                                role?: string;
                                username?: string;
                                first_name?: string;
                                last_name?: string;
                            };
                            user_preferences?: {
                                theme?: string | null;
                                tint_color?: string | null;
                                language?: string | null;
                            };
                        };
                    };
                };
            };
            /** @description Missing email or password */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Login failed. Incorrect password or user not registered. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "681bf296e3c8a5b5ab800916afba2cc0": {
        parameters: {
            query: {
                /** @description Date for the stock data */
                date: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Stock data retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Stock data retrieved successfully */
                        message?: string;
                        data?: components["schemas"]["Stock"][];
                    };
                    "application/xml": {
                        /** @example Stock data retrieved successfully */
                        message?: string;
                        data?: components["schemas"]["Stock"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Stock not found for the given date */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ba8c834cbe81068aa3553b10ae0adc9e: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: date
                     * @example 2025-07-14
                     */
                    date?: string;
                };
            };
        };
        responses: {
            /** @description Stock saved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request - Missing or invalid data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "21374aa54f8c94a3dfd9abf9efe9ac86": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Users fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"][];
                    };
                    "application/xml": {
                        /** @example Users fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"][];
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
        };
    };
    c23061913c7f3c33a5e8f57461149771: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    first_name?: string;
                    last_name?: string;
                    username: string;
                    email: string;
                    password: string;
                    role?: string;
                    user_preferences?: {
                        theme?: string | null;
                        tint_color?: string | null;
                        language?: string | null;
                    };
                };
            };
        };
        responses: {
            /** @description User created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User created successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User created successfully */
                        message?: string;
                    };
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description Failed to create user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    f54c6efbff4bec0e08c9a4bdfbf6ec08: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User fetched successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"];
                    };
                    "application/xml": {
                        /** @example User fetched successfully */
                        message?: string;
                        data?: components["schemas"]["User"];
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "56929103075f7718c31ecaf541b79b0f": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User deleted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User deleted successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User deleted successfully */
                        message?: string;
                    };
                };
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description Unauthorized */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Unauthorized: You can only delete your own profile */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Unauthorized: You can only delete your own profile */
                        error?: string;
                    };
                };
            };
            /** @description Failed to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "8a69c183af85db99b68b8906cefe7e91": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userID: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    first_name?: string;
                    last_name?: string;
                    username?: string;
                    email?: string;
                    role?: string;
                    user_preferences?: {
                        theme?: string | null;
                        tint_color?: string | null;
                        language?: string | null;
                    };
                };
            };
        };
        responses: {
            /** @description User updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User updated successfully */
                        message?: string;
                    };
                    "application/xml": {
                        /** @example User updated successfully */
                        message?: string;
                    };
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized, login required */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Login required */
                        error?: string;
                    };
                    "application/xml": {
                        /** @example Login required */
                        error?: string;
                    };
                };
            };
            /** @description No sufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Failed to update user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
